// Generated by SugarLisp v0.6.0
var sl = require('sugarlisp-core/sl-types');
var match = require('sugarlisp-match/pattern-match');

var reader = require('sugarlisp-core/reader');
var sl = require('sugarlisp-core/types');

function testMatchSimple(forms) {
  return (
    return match(forms, function(when) {
      (when([
          function(sym) {
            return sym.value === "function";
          },
          match.var("fname", match.slsymbol),
          match.var("fargs", match.sllist)
        ],
        function(vars) {
          return (function(fname, fargs, fbody) {
            console.log(["Was: function ", fname, "(", fargs, ") (", fbody, ")"].join(''));
          }).call(this, vars["fname"], vars["fargs"], vars["_rest"]);
        }, this);)(when([
          function(sym) {
            return sym.value === "function";
          },
          match.var("fargs", match.sllist)
        ],
        function(vars) {
          return (function(fargs, fbody) {
            console.log(["Was: Anonymous function (", fargs, ") (", fbody, ")"].join(''));
          }).call(this, vars["fargs"], vars["_rest"]);
        }, this);)(when([
          match.var("any", match.sldefault)
        ],
        function(vars) {
          return (function(any) {
            console.log("No match:", any.toJSON());
          }).call(this, vars["any"]);
        }, this);)
    }, this));
}
var src = '(function add(x y) (console.log "hello"))';
var forms = reader.read_from_source(src, 'testReader.ls');
console.log(('\n' + sl.pprintSEXP(forms.toJSON(), {
  bareSymbols: true
}) + '\n'));

testMatchSimple(forms);